
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ANY FUNCNAME FUNCTYPE NL PARAMETRSfunc_list : func\n        | func_list func func : FUNCTYPE FUNCNAME PARAMETRS NLfunc : err_list NLfunc : FUNCTYPE err_list NLfunc : FUNCTYPE FUNCNAME err_list NLfunc : FUNCTYPE FUNCNAME PARAMETRS err_list NLerr_list :\n        | err\n        | err_list errerr : ANY'
    
_lr_action_items = {'FUNCTYPE':([0,1,2,7,10,14,15,17,18,],[3,3,-1,-2,-4,-5,-3,-6,-7,]),'NL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,],[-8,-8,-1,-8,10,-9,-11,-2,-8,14,-4,-10,15,17,-5,-3,18,-6,-7,]),'ANY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,],[6,6,-1,6,6,-9,-11,-2,6,6,-4,-10,6,6,-5,-3,6,-6,-7,]),'$end':([1,2,7,10,14,15,17,18,],[0,-1,-2,-4,-5,-3,-6,-7,]),'FUNCNAME':([3,],[8,]),'PARAMETRS':([8,],[12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'func_list':([0,],[1,]),'func':([0,1,],[2,7,]),'err_list':([0,1,3,8,12,],[4,4,9,13,16,]),'err':([0,1,3,4,8,9,12,13,16,],[5,5,5,11,5,11,5,11,11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> func_list","S'",1,None,None,None),
  ('func_list -> func','func_list',1,'p_func_list','parserClass.py',33),
  ('func_list -> func_list func','func_list',2,'p_func_list','parserClass.py',34),
  ('func -> FUNCTYPE FUNCNAME PARAMETRS NL','func',4,'p_func','parserClass.py',41),
  ('func -> err_list NL','func',2,'p_func_zero_err_type','parserClass.py',52),
  ('func -> FUNCTYPE err_list NL','func',3,'p_func_first_err_type','parserClass.py',58),
  ('func -> FUNCTYPE FUNCNAME err_list NL','func',4,'p_func_second_err_type','parserClass.py',64),
  ('func -> FUNCTYPE FUNCNAME PARAMETRS err_list NL','func',5,'p_func_forth_err_type','parserClass.py',70),
  ('err_list -> <empty>','err_list',0,'p_err_list','parserClass.py',76),
  ('err_list -> err','err_list',1,'p_err_list','parserClass.py',77),
  ('err_list -> err_list err','err_list',2,'p_err_list','parserClass.py',78),
  ('err -> ANY','err',1,'p_err','parserClass.py',87),
]
