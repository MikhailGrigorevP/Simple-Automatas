Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> func_list
Rule 1     func_list -> func
Rule 2     func_list -> func_list func
Rule 3     func -> FUNCTYPE FUNCNAME PARAMETRS
Rule 4     func -> FUNCTYPE err_list
Rule 5     func -> FUNCTYPE FUNCNAME err_list
Rule 6     func -> FUNCTYPE FUNCNAME PARAMETRS err_list
Rule 7     err_list -> <empty>
Rule 8     err_list -> err
Rule 9     err_list -> err_list err
Rule 10    err -> ANY

Terminals, with rules where they appear

ANY                  : 10
FUNCNAME             : 3 5 6
FUNCTYPE             : 3 4 5 6
PARAMETRS            : 3 6
error                : 

Nonterminals, with rules where they appear

err                  : 8 9
err_list             : 4 5 6 9
func                 : 1 2
func_list            : 2 0

Parsing method: LALR

state 0

    (0) S' -> . func_list
    (1) func_list -> . func
    (2) func_list -> . func_list func
    (3) func -> . FUNCTYPE FUNCNAME PARAMETRS
    (4) func -> . FUNCTYPE err_list
    (5) func -> . FUNCTYPE FUNCNAME err_list
    (6) func -> . FUNCTYPE FUNCNAME PARAMETRS err_list

    FUNCTYPE        shift and go to state 3

    func_list                      shift and go to state 1
    func                           shift and go to state 2

state 1

    (0) S' -> func_list .
    (2) func_list -> func_list . func
    (3) func -> . FUNCTYPE FUNCNAME PARAMETRS
    (4) func -> . FUNCTYPE err_list
    (5) func -> . FUNCTYPE FUNCNAME err_list
    (6) func -> . FUNCTYPE FUNCNAME PARAMETRS err_list

    FUNCTYPE        shift and go to state 3

    func                           shift and go to state 4

state 2

    (1) func_list -> func .

    FUNCTYPE        reduce using rule 1 (func_list -> func .)
    $end            reduce using rule 1 (func_list -> func .)


state 3

    (3) func -> FUNCTYPE . FUNCNAME PARAMETRS
    (4) func -> FUNCTYPE . err_list
    (5) func -> FUNCTYPE . FUNCNAME err_list
    (6) func -> FUNCTYPE . FUNCNAME PARAMETRS err_list
    (7) err_list -> .
    (8) err_list -> . err
    (9) err_list -> . err_list err
    (10) err -> . ANY

  ! shift/reduce conflict for ANY resolved as shift
    FUNCNAME        shift and go to state 5
    FUNCTYPE        reduce using rule 7 (err_list -> .)
    $end            reduce using rule 7 (err_list -> .)
    ANY             shift and go to state 8

  ! ANY             [ reduce using rule 7 (err_list -> .) ]

    err_list                       shift and go to state 6
    err                            shift and go to state 7

state 4

    (2) func_list -> func_list func .

    FUNCTYPE        reduce using rule 2 (func_list -> func_list func .)
    $end            reduce using rule 2 (func_list -> func_list func .)


state 5

    (3) func -> FUNCTYPE FUNCNAME . PARAMETRS
    (5) func -> FUNCTYPE FUNCNAME . err_list
    (6) func -> FUNCTYPE FUNCNAME . PARAMETRS err_list
    (7) err_list -> .
    (8) err_list -> . err
    (9) err_list -> . err_list err
    (10) err -> . ANY

  ! shift/reduce conflict for ANY resolved as shift
    PARAMETRS       shift and go to state 9
    FUNCTYPE        reduce using rule 7 (err_list -> .)
    $end            reduce using rule 7 (err_list -> .)
    ANY             shift and go to state 8

  ! ANY             [ reduce using rule 7 (err_list -> .) ]

    err_list                       shift and go to state 10
    err                            shift and go to state 7

state 6

    (4) func -> FUNCTYPE err_list .
    (9) err_list -> err_list . err
    (10) err -> . ANY

    FUNCTYPE        reduce using rule 4 (func -> FUNCTYPE err_list .)
    $end            reduce using rule 4 (func -> FUNCTYPE err_list .)
    ANY             shift and go to state 8

    err                            shift and go to state 11

state 7

    (8) err_list -> err .

    ANY             reduce using rule 8 (err_list -> err .)
    FUNCTYPE        reduce using rule 8 (err_list -> err .)
    $end            reduce using rule 8 (err_list -> err .)


state 8

    (10) err -> ANY .

    ANY             reduce using rule 10 (err -> ANY .)
    FUNCTYPE        reduce using rule 10 (err -> ANY .)
    $end            reduce using rule 10 (err -> ANY .)


state 9

    (3) func -> FUNCTYPE FUNCNAME PARAMETRS .
    (6) func -> FUNCTYPE FUNCNAME PARAMETRS . err_list
    (7) err_list -> .
    (8) err_list -> . err
    (9) err_list -> . err_list err
    (10) err -> . ANY

  ! reduce/reduce conflict for FUNCTYPE resolved using rule 3 (func -> FUNCTYPE FUNCNAME PARAMETRS .)
  ! reduce/reduce conflict for $end resolved using rule 3 (func -> FUNCTYPE FUNCNAME PARAMETRS .)
  ! shift/reduce conflict for ANY resolved as shift
    FUNCTYPE        reduce using rule 3 (func -> FUNCTYPE FUNCNAME PARAMETRS .)
    $end            reduce using rule 3 (func -> FUNCTYPE FUNCNAME PARAMETRS .)
    ANY             shift and go to state 8

  ! ANY             [ reduce using rule 7 (err_list -> .) ]
  ! FUNCTYPE        [ reduce using rule 7 (err_list -> .) ]
  ! $end            [ reduce using rule 7 (err_list -> .) ]

    err_list                       shift and go to state 12
    err                            shift and go to state 7

state 10

    (5) func -> FUNCTYPE FUNCNAME err_list .
    (9) err_list -> err_list . err
    (10) err -> . ANY

    FUNCTYPE        reduce using rule 5 (func -> FUNCTYPE FUNCNAME err_list .)
    $end            reduce using rule 5 (func -> FUNCTYPE FUNCNAME err_list .)
    ANY             shift and go to state 8

    err                            shift and go to state 11

state 11

    (9) err_list -> err_list err .

    ANY             reduce using rule 9 (err_list -> err_list err .)
    FUNCTYPE        reduce using rule 9 (err_list -> err_list err .)
    $end            reduce using rule 9 (err_list -> err_list err .)


state 12

    (6) func -> FUNCTYPE FUNCNAME PARAMETRS err_list .
    (9) err_list -> err_list . err
    (10) err -> . ANY

    FUNCTYPE        reduce using rule 6 (func -> FUNCTYPE FUNCNAME PARAMETRS err_list .)
    $end            reduce using rule 6 (func -> FUNCTYPE FUNCNAME PARAMETRS err_list .)
    ANY             shift and go to state 8

    err                            shift and go to state 11
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ANY in state 3 resolved as shift
WARNING: shift/reduce conflict for ANY in state 5 resolved as shift
WARNING: shift/reduce conflict for ANY in state 9 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (func -> FUNCTYPE FUNCNAME PARAMETRS)
WARNING: rejected rule (err_list -> <empty>) in state 9
